--- 
:author_name: Iain Buckingham
:author_email: iainbuckingham+1228905515@seagul.co.uk
:thread_id: "3785423"
:created_at: 2006-11-30T10:19
:message: "<p>I&#8217;m thinking that learning REST is like learning OO, and the trick is in seeing what the objects (URL resources) are.</p>
  <p>For currency conversion, a conversion is uniquely specified by the exchange rate and the source amount, and the exchange rate is specified by a date and the source and destination currencies. Therefore a RESTful URL would be /conversions?source=USD&#38;dest=GBP&#38;date=20061130&#38;amount=100, (or /conversions/USD/GBP/20061130/100) The contents of the page would then be the value (\xC2\xA351.45). The URL parameters shouldn&#8217;t be seen as the parameters to a function, but the parameters of an object &#8216;constructor&#8217;, which you are then fetching.</p>
  <p>For the syntax highlighting example you might want to construct a code block on the server, by POSTing your code to the /code_blocks page. The server could return a link to the new, highlighted resource (/code_blocks/81782), for later reference, but could also return the results in the body content at the same time.</p>
  <p>The key would seem to be the same as good OO design, decomposing the domain into appropriate collaborating objects. And avoiding the &#8216;global function&#8217; thinking that many SOAP examples promote.</p>"
:author_url: ""
