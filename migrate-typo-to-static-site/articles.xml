<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="/stylesheets/rss.css"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>deferred until inspiration hits</title>
    <link>http://blog.seagul.co.uk/</link>
    <language>en-us</language>
    <ttl>40</ttl>

    <description></description>
    <item>
      <title>Emailing photos to flickr from my Skypephone</title>
      <description>&lt;p&gt;I wanted to get my thoughts down more than trying to write something particularly coherent so I apologise for the unstructured post.&lt;/p&gt;


	&lt;p&gt;I&amp;#8217;ve been trying to get this working for the last week or so, without much success.&lt;/p&gt;


	&lt;p&gt;The first problem I ran into was my general impatience and incompetence.  I was able to receive emails to my 3mail.com address but sending of emails was not working (attachment or not).  I struggled alone for a bit before heading for the instruction manual and realising that I hadn&amp;#8217;t actually configured my email settings.&lt;/p&gt;


	&lt;p&gt;I needed to change the username (from the default &amp;#8216;3Mail&amp;#8217; to my mobile number) and the password (to the four digit code set-up at some point during the enrollment process).  I also changed the Mail address to my 3mail.com address but I&amp;#8217;m not sure whether this was necessary or not.  Changing these settings allowed me to send email (I started by emailing my personal account).  As I was successfully receiving emails before these changes I can only assume that the username and password are required for &lt;span class="caps"&gt;SMTP&lt;/span&gt; and that &lt;span class="caps"&gt;IMAP&lt;/span&gt; authentication happens in some other, magical, way.&lt;/p&gt;


	&lt;p&gt;The 3mail service appears to use standard &lt;a href="http://en.wikipedia.org/wiki/Internet_Message_Access_Protocol"&gt;&lt;span class="caps"&gt;IMAP&lt;/span&gt;&lt;/a&gt; (imap.three.co.uk) and &lt;a href="http://en.wikipedia.org/wiki/SMTP"&gt;&lt;span class="caps"&gt;SMTP&lt;/span&gt;&lt;/a&gt; servers but I&amp;#8217;m guessing that access is restricted by IP address.  I certainly couldn&amp;#8217;t access them from my laptop on the end of an &lt;span class="caps"&gt;ADSL&lt;/span&gt; connection.&lt;/p&gt;


	&lt;p&gt;I was monitoring the costs of the emails being sent and soon realised that every email that included a picture cost fifty pence.  I sent a simple text email with a tiny subject and body and it didn&amp;#8217;t affect my credit at all so I&amp;#8217;m not entirely sure of their charging model (it could be that I pay for attachments or just messages over a certain size).  I wondered whether the data used in sending the email would come out of an Internet bundles.  I purchased a fifty pence, one day, Internet bundle and sent another message: my credit decreased by fifty pence again.  D&amp;#8217;oh.&lt;/p&gt;


	&lt;p&gt;It might be useful to note that you can send one email to multiple recipients (I tried two) for the same price (fifty pence for the email with picture that I was sending).&lt;/p&gt;


	&lt;p&gt;I emailed the same photo to &lt;a href="http://flickr.com"&gt;flickr&lt;/a&gt; twice, cc&amp;#8217;ing my personal address one occasion.  Neither email made it to flickr (well, it&amp;#8217;s difficult to know that for sure but it certainly didn&amp;#8217;t show up) but the email cc&amp;#8217;d to me came through fine.  To ensure that &amp;#8216;email to flickr&amp;#8217; was working correctly, I sent the picture I&amp;#8217;d just received to my flickr email address (copied from the email) and it &lt;a href="http://www.flickr.com/photos/chrisjroos/2199297357/"&gt;showed up&lt;/a&gt; almost immediately.  Hmm, so I&amp;#8217;ve now wasted a couple of quid and still can&amp;#8217;t email my photos to flickr.&lt;/p&gt;


	&lt;p&gt;I was able to send the message as a picture message to flickr (and my personal email) at a cost of twenty-five pence.  There are two (smallish) downsides to this approach: the pictures are resized to 640&amp;#215;480 before sending and, as it goes through an &lt;a href="http://en.wikipedia.org/wiki/Multimedia_Messaging_Service"&gt;&lt;span class="caps"&gt;MMS&lt;/span&gt;&lt;/a&gt; to email translation phase, the email you receive doesn&amp;#8217;t have the subject and body set correctly (&lt;a href="http://www.flickr.com/photos/chrisjroos/2199389895/"&gt;screenshot&lt;/a&gt;).&lt;/p&gt;</description>

      <pubDate>Thu, 17 Jan 2008 18:20:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:82cf9da3-d148-4708-81ad-cb2aa419ff12</guid>
      <author>Chris Roos</author>
      <link>http://blog.seagul.co.uk/articles/2008/01/17/emailing-photos-to-flickr-from-my-skypephone</link>
      <category>skypephone</category>
      <category>flickr</category>

      <category>email</category>
      <category>mms</category>
      <category>pictures</category>
    </item>
    <item>
      <title>Testing my mod_rewrite configuration with ruby</title>
      <description>&lt;p&gt;In order to ensure that I didn&amp;#8217;t break anything while setting up my &lt;a href="http://blog.seagul.co.uk/articles/2008/01/16/chris-1-mod_rewrite-0-muhahahaha"&gt;mod_rewrite rules&lt;/a&gt; I created a little &lt;a href="http://chrisroos.googlecode.com/svn/trunk/the-local-paper/apache_test.rb"&gt;ruby script&lt;/a&gt; to test my expectations.  I&amp;#8217;ve cut down the rules in the example below but you should get the idea.  It&amp;#8217;d be quite cool to create a little dsl to better express the intentions of the code.&lt;/p&gt;


&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_ruby "&gt;&lt;span class="ident"&gt;require&lt;/span&gt; &lt;span class="punct"&gt;'&lt;/span&gt;&lt;span class="string"&gt;net/http&lt;/span&gt;&lt;span class="punct"&gt;'&lt;/span&gt;

&lt;span class="ident"&gt;expectations&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="punct"&gt;{&lt;/span&gt;
  &lt;span class="comment"&gt;# Redirect www. to .&lt;/span&gt;

  &lt;span class="punct"&gt;'&lt;/span&gt;&lt;span class="string"&gt;http://www.the-local-paper.co.uk/&lt;/span&gt;&lt;span class="punct"&gt;'&lt;/span&gt; &lt;span class="punct"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="punct"&gt;{&lt;/span&gt;

    &lt;span class="symbol"&gt;:url&lt;/span&gt; &lt;span class="punct"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="punct"&gt;'&lt;/span&gt;&lt;span class="string"&gt;http://the-local-paper.co.uk/&lt;/span&gt;&lt;span class="punct"&gt;',&lt;/span&gt; &lt;span class="symbol"&gt;:code&lt;/span&gt; &lt;span class="punct"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="punct"&gt;'&lt;/span&gt;&lt;span class="string"&gt;301&lt;/span&gt;&lt;span class="punct"&gt;'&lt;/span&gt;

  &lt;span class="punct"&gt;},&lt;/span&gt;
  &lt;span class="comment"&gt;# Requests for the-local-paper.co.uk should return a 200 (OK) response&lt;/span&gt;
  &lt;span class="punct"&gt;'&lt;/span&gt;&lt;span class="string"&gt;http://the-local-paper.co.uk/&lt;/span&gt;&lt;span class="punct"&gt;'&lt;/span&gt; &lt;span class="punct"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="punct"&gt;{&lt;/span&gt;

    &lt;span class="symbol"&gt;:code&lt;/span&gt; &lt;span class="punct"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="punct"&gt;'&lt;/span&gt;&lt;span class="string"&gt;200&lt;/span&gt;&lt;span class="punct"&gt;'&lt;/span&gt;

  &lt;span class="punct"&gt;}&lt;/span&gt;
&lt;span class="punct"&gt;}&lt;/span&gt;

&lt;span class="ident"&gt;expectations&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;each&lt;/span&gt; &lt;span class="keyword"&gt;do&lt;/span&gt; &lt;span class="punct"&gt;|&lt;/span&gt;&lt;span class="ident"&gt;request_url&lt;/span&gt;&lt;span class="punct"&gt;,&lt;/span&gt; &lt;span class="ident"&gt;expected_attributes&lt;/span&gt;&lt;span class="punct"&gt;|&lt;/span&gt;

  &lt;span class="ident"&gt;puts&lt;/span&gt; &lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;Requesting: &lt;span class="expr"&gt;#{request_url}&lt;/span&gt;&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;

  &lt;span class="ident"&gt;url&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="constant"&gt;URI&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;parse&lt;/span&gt;&lt;span class="punct"&gt;(&lt;/span&gt;&lt;span class="ident"&gt;request_url&lt;/span&gt;&lt;span class="punct"&gt;)&lt;/span&gt;

  &lt;span class="ident"&gt;request&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="constant"&gt;Net&lt;/span&gt;&lt;span class="punct"&gt;::&lt;/span&gt;&lt;span class="constant"&gt;HTTP&lt;/span&gt;&lt;span class="punct"&gt;::&lt;/span&gt;&lt;span class="constant"&gt;Get&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;new&lt;/span&gt;&lt;span class="punct"&gt;(&lt;/span&gt;&lt;span class="ident"&gt;url&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;path&lt;/span&gt;&lt;span class="punct"&gt;)&lt;/span&gt;

  &lt;span class="ident"&gt;response&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="constant"&gt;Net&lt;/span&gt;&lt;span class="punct"&gt;::&lt;/span&gt;&lt;span class="constant"&gt;HTTP&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;start&lt;/span&gt;&lt;span class="punct"&gt;(&lt;/span&gt;&lt;span class="ident"&gt;url&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;host&lt;/span&gt;&lt;span class="punct"&gt;,&lt;/span&gt; &lt;span class="ident"&gt;url&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;port&lt;/span&gt;&lt;span class="punct"&gt;)&lt;/span&gt; &lt;span class="keyword"&gt;do&lt;/span&gt; &lt;span class="punct"&gt;|&lt;/span&gt;&lt;span class="ident"&gt;http&lt;/span&gt;&lt;span class="punct"&gt;|&lt;/span&gt;

    &lt;span class="ident"&gt;http&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;request&lt;/span&gt;&lt;span class="punct"&gt;(&lt;/span&gt;&lt;span class="ident"&gt;request&lt;/span&gt;&lt;span class="punct"&gt;)&lt;/span&gt;

  &lt;span class="keyword"&gt;end&lt;/span&gt;

  &lt;span class="keyword"&gt;if&lt;/span&gt; &lt;span class="ident"&gt;redirection_url&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="ident"&gt;expected_attributes&lt;/span&gt;&lt;span class="punct"&gt;[&lt;/span&gt;&lt;span class="symbol"&gt;:url&lt;/span&gt;&lt;span class="punct"&gt;]&lt;/span&gt;

    &lt;span class="keyword"&gt;raise&lt;/span&gt; &lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;Expected '&lt;span class="expr"&gt;#{redirection_url}&lt;/span&gt;' in the Location header but got '&lt;span class="expr"&gt;#{response['Location']}&lt;/span&gt;'.&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;&lt;/span&gt; &lt;span class="keyword"&gt;unless&lt;/span&gt; &lt;span class="ident"&gt;redirection_url&lt;/span&gt; &lt;span class="punct"&gt;==&lt;/span&gt; &lt;span class="ident"&gt;response&lt;/span&gt;&lt;span class="punct"&gt;['&lt;/span&gt;&lt;span class="string"&gt;Location&lt;/span&gt;&lt;span class="punct"&gt;']&lt;/span&gt;

  &lt;span class="keyword"&gt;end&lt;/span&gt;
  &lt;span class="keyword"&gt;if&lt;/span&gt; &lt;span class="ident"&gt;status_code&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="ident"&gt;expected_attributes&lt;/span&gt;&lt;span class="punct"&gt;[&lt;/span&gt;&lt;span class="symbol"&gt;:code&lt;/span&gt;&lt;span class="punct"&gt;]&lt;/span&gt;

    &lt;span class="keyword"&gt;raise&lt;/span&gt; &lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;Expected status code of (&lt;span class="expr"&gt;#{status_code}&lt;/span&gt;) but got (&lt;span class="expr"&gt;#{response.code}&lt;/span&gt;).&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;&lt;/span&gt; &lt;span class="keyword"&gt;unless&lt;/span&gt; &lt;span class="ident"&gt;status_code&lt;/span&gt; &lt;span class="punct"&gt;==&lt;/span&gt; &lt;span class="ident"&gt;response&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;code&lt;/span&gt;

  &lt;span class="keyword"&gt;end&lt;/span&gt;
&lt;span class="keyword"&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <pubDate>Wed, 16 Jan 2008 09:31:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:92474f38-31b4-4247-bc47-af786b4577bb</guid>

      <author>Chris Roos</author>
      <link>http://blog.seagul.co.uk/articles/2008/01/16/testing-my-mod_rewrite-configuration-with-ruby</link>
      <category>ruby</category>
      <category>mod_rewrite</category>
      <category>apache</category>
      <category>test</category>

    </item>
    <item>
      <title>Chris 1, mod_rewrite 0 (muhahahaha)</title>
      <description>&lt;p&gt;I&amp;#8217;ve now spent quite a considerable amount of time trying to get &lt;a href="http://httpd.apache.org/docs/1.3/mod/mod_rewrite.html"&gt;mod_rewrite&lt;/a&gt; to do my bidding and I think I might just have cracked it&lt;sup&gt;&lt;a href="#fn1"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;


	&lt;h3&gt;The requirements&lt;/h3&gt;


	&lt;ul&gt;
	&lt;li&gt;Permanently redirect (301) and requests for www.the-local-paper.co.uk to the-local-paper.co.uk&lt;/li&gt;

		&lt;li&gt;Permanently redirect any requests for &lt;code&gt;/index.html&lt;/code&gt; to &lt;code&gt;/&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;Permanently redirect any requests for &lt;code&gt;/&amp;lt;article&amp;gt;.html&lt;/code&gt; to &lt;code&gt;/&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/li&gt;

		&lt;li&gt;Render the corresponding &lt;code&gt;/&amp;lt;article&amp;gt;.html&lt;/code&gt; for any requests for &lt;code&gt;/&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/li&gt;

		&lt;li&gt;Hide .svn directories as the entire site is checked out from &lt;a href="http://subversion.tigris.org/"&gt;subversion&lt;/a&gt;&lt;/li&gt;
	&lt;/ul&gt;


	&lt;h3&gt;The mod_rewrite rules&lt;/h3&gt;


&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_default "&gt;# Permanently (301) redirect /index.html to / (regex copied from http://www.webmasterworld.com/apache/3155094.htm)
RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /.*index\.html\ HTTP/
RewriteRule ^(.*)index\.html$ $1 [R=301,L]

# Permanently (301) redirect /&amp;lt;article&amp;gt;.html to /&amp;lt;article&amp;gt;, ensuring that we don't try to redirect index.html to index
RewriteCond %{THE_REQUEST} .+/[0-9]{4}/[0-9]{2}/[0-9]{2}/.+\.html\ HTTP/
RewriteCond %{THE_REQUEST} !index\.html\ HTTP/
RewriteRule ^(.*)\.html$ $1 [R=301,L]

# If we receive a request for an article without a .html extension then let's rewrite internally to render the file with the .html extension
RewriteCond %{REQUEST_URI} .+/[0-9]{4}/[0-9]{2}/[0-9]{2}/.+$
RewriteCond %{REQUEST_URI} !\.html$
RewriteRule ^(.*)$ $1.html [L]

# Permanently (301) remove www.
RewriteCond %{HTTP_HOST} ^www.the-local-paper.co.uk$ [NC]
RewriteRule ^(.*)$ http://the-local-paper.co.uk/$1 [R=301,L]

# Block access to the .svn directories
&amp;lt;DirectoryMatch &amp;quot;^/.*/\.svn/&amp;quot;&amp;gt;
  ErrorDocument 403 /404.html
  Order allow,deny
  Deny from all
  Satisfy All
&amp;lt;/DirectoryMatch&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

	&lt;p&gt;I figured that there&amp;#8217;s a chance some of these rules might come in useful to someone else.&lt;/p&gt;


	&lt;p id="fn1"&gt;&lt;sup&gt;1&lt;/sup&gt; This has all been for the &lt;a href="http://blog.seagul.co.uk/articles/2007/06/01/an-open-letter-to-my-local-newspapers"&gt;local paper idea&lt;/a&gt; I mentioned a while back.  I&amp;#8217;ve actually &lt;a href="http://twitter.com/chrisroos/statuses/570937102"&gt;started&lt;/a&gt; to get some content up on &lt;a href="http://the-local-paper.co.uk"&gt;the-local-paper.co.uk&lt;/a&gt; if you want to play along and see how it&amp;#8217;s shaping up..&lt;/p&gt;</description>

      <pubDate>Wed, 16 Jan 2008 09:08:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:d8b747ec-367b-4ae3-abdc-8acabeef6d17</guid>
      <author>Chris Roos</author>
      <link>http://blog.seagul.co.uk/articles/2008/01/16/chris-1-mod_rewrite-0-muhahahaha</link>
      <category>tlpa</category>
      <category>the</category>

      <category>local</category>
      <category>paper.co.uk</category>
      <category>mod_rewrite</category>
      <category>apache</category>
    </item>
    <item>
      <title>Fun with mod_rewrite (and its special variables REQUEST_URI, IS_SUBREQ and THE_REQUEST)</title>

      <description>&lt;p&gt;I wasted a few hours of my life, over the weekend, playing with &lt;a href="http://httpd.apache.org/docs/1.3/mod/mod_rewrite.html"&gt;mod_rewrite&lt;/a&gt;.  I had, what I thought to be, a fairly simple problem to solve: I wanted requests for index.html within any subdirectory of my site to be &lt;a href="http://en.wikipedia.org/wiki/URL_redirection"&gt;redirected&lt;/a&gt; to the root of that subdirectory.  So, a request for example.com/subdir/index.html would be (301) redirected to example.com/subdir/.&lt;/p&gt;


	&lt;p&gt;I thought I could do this without using &lt;a href="http://httpd.apache.org/docs/1.3/mod/mod_rewrite.html#RewriteCond"&gt;RewriteCond&lt;/a&gt;.  I tried something like this.&lt;/p&gt;


&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_default "&gt;RewriteRule ^(.*)index\.html$ $1 [R=301]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

	&lt;p&gt;I would expect this to match requests for URLs that end with index.html and redirect them to the &lt;span class="caps"&gt;URL&lt;/span&gt; minus index.html.  Although this correctly redirected /subdir/index.html to /subdir/ it would also attempt to redirect /subdir/ to /subdir/ resulting in an infinite loop.  It took me a very long time to work out, what I believe, is going on.  If I understand correctly, &lt;a href="http://httpd.apache.org/"&gt;apache&lt;/a&gt; will send every request (i.e. not just the request you issue from the browser) through mod_rewrite.  When we request /subdir/, apache will try, and fail, to match that &lt;span class="caps"&gt;URL&lt;/span&gt; with our regex (/subdir/ doesn&amp;#8217;t end with index.html).  Internally, apache then &amp;#8216;requests&amp;#8217; index.html (since index.html is the &lt;a href="http://httpd.apache.org/docs/1.3/mod/mod_dir.html#directoryindex"&gt;DirectoryIndex&lt;/a&gt;).  This request matches our regex which results in apache sending the 301 redirect and us ending up with an infinite loop.  If I mis-understand what&amp;#8217;s going on please feel free to correct me.&lt;/p&gt;


	&lt;p&gt;Based on this assumption, I figured I&amp;#8217;d need to use RewriteCond to somehow ignore the internal request for index.html.  I initially added a condition that checked for the &lt;span class="caps"&gt;REQUEST&lt;/span&gt;_URI ending in index.html (&lt;code&gt;RewriteCond %{REQUEST_URI} index\.html$&lt;/code&gt;).  This suffered the same problem as my initial attempt.  A little more reading led me to the IS_SUBREQ special variable.  I thought this might allow me to ignore the &amp;#8216;internal request&amp;#8217; for index.html (&lt;code&gt;RewriteCond %{IS_SUBREQ} false&lt;/code&gt;) but I couldn&amp;#8217;t get it to have any effect.&lt;/p&gt;


	&lt;p&gt;In searching for answers to this problem I kept seeing &lt;span class="caps"&gt;THE&lt;/span&gt;_REQUEST special variable used in the solution, although never an explanation as to why it&amp;#8217;s used (specifically in preference to &lt;span class="caps"&gt;REQUEST&lt;/span&gt;_URI).  I ended up using &lt;span class="caps"&gt;THE&lt;/span&gt;_REQUEST in my solution (not technically my solution as I stole it from a site that I failed to bookmark) and it seems to work OK.&lt;/p&gt;


&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_default "&gt;RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /.*index\.html\ HTTP/
RewriteRule ^(.*)index\.html$ $1 [R=301,L]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

	&lt;p&gt;I&amp;#8217;m guessing that this is because &lt;span class="caps"&gt;THE&lt;/span&gt;_REQUEST contains the full details (the stuff that appears in the log file) of the request from the client (browser) and will therefore be empty for any &amp;#8216;internal requests&amp;#8217;.  Anyone know if my assumptions are correct?&lt;/p&gt;</description>

      <pubDate>Mon, 14 Jan 2008 10:14:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:0d80acad-6b51-42bb-b456-1168c8b59302</guid>
      <author>Chris Roos</author>
      <link>http://blog.seagul.co.uk/articles/2008/01/14/fun-with-mod_rewrite-and-its-special-variables-request_uri-is_subreq-and-the_request</link>
      <category>apache</category>
      <category>mod_rewrite</category>

      <category>url</category>
    </item>
    <item>
      <title>Searching subversion history</title>
      <description>&lt;p&gt;I&amp;#8217;ve often felt the need to search through our &lt;a href="http://subversion.tigris.org/"&gt;subversion&lt;/a&gt; repository to find, for example, when a method was removed/renamed.  As far as I&amp;#8217;m aware there&amp;#8217;s no easy way to do this using the standard subversion, or &lt;a href="http://trac.edgewall.org/"&gt;trac&lt;/a&gt;, tools.  A few days ago the need arose once more: I wanted to know when a particular class had stopped being used within our codebase.  It struck me that if I had a &lt;a href="http://en.wikipedia.org/wiki/Diff"&gt;diff&lt;/a&gt; file for each changeset that I&amp;#8217;d be able to &lt;a href="http://en.wikipedia.org/wiki/Grep"&gt;grep&lt;/a&gt; for the change I was looking for.  I hacked together a script to produce a diff of each changeset (actually, as I knew when the class was added, I only produced a diff for a subset of the changesets) and was able to find the information I needed.  The script is pasted below and on &lt;a href="http://chrisroos.googlecode.com/svn/trunk/svn_changesets/"&gt;google code&lt;/a&gt;.  It assumes that you are running it from within an svn working direction.  It took a while to produce the diff files (I&amp;#8217;m afraid I don&amp;#8217;t have any stats) but the result was a really fast way of finding, otherwise hard to find, information.  I guess it&amp;#8217;d be quite easy to automate the diff creation process so that you had an always up-to-date bunch of diff fies&amp;#8230;&lt;/p&gt;


	&lt;p&gt;Is this useful, or have I missed something obvious in Subversion or Trac that does exactly this?&lt;/p&gt;


&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_ruby "&gt;&lt;span class="ident"&gt;require&lt;/span&gt; &lt;span class="punct"&gt;'&lt;/span&gt;&lt;span class="string"&gt;fileutils&lt;/span&gt;&lt;span class="punct"&gt;'&lt;/span&gt;

&lt;span class="ident"&gt;stop_at_revision&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="constant"&gt;ARGV&lt;/span&gt;&lt;span class="punct"&gt;[&lt;/span&gt;&lt;span class="number"&gt;0&lt;/span&gt;&lt;span class="punct"&gt;]&lt;/span&gt;

&lt;span class="keyword"&gt;raise&lt;/span&gt; &lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;Please specify the revision that you wish to go back to as the only argument to this script.&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;&lt;/span&gt; &lt;span class="keyword"&gt;unless&lt;/span&gt; &lt;span class="ident"&gt;stop_at_revision&lt;/span&gt;

&lt;span class="ident"&gt;stop_at_revision&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="constant"&gt;Integer&lt;/span&gt;&lt;span class="punct"&gt;(&lt;/span&gt;&lt;span class="ident"&gt;stop_at_revision&lt;/span&gt;&lt;span class="punct"&gt;)&lt;/span&gt;

&lt;span class="keyword"&gt;class &lt;/span&gt;&lt;span class="class"&gt;Time&lt;/span&gt;
  &lt;span class="keyword"&gt;def &lt;/span&gt;&lt;span class="method"&gt;friendly_format&lt;/span&gt;
    &lt;span class="ident"&gt;strftime&lt;/span&gt;&lt;span class="punct"&gt;(&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;%Y-%m-%d %H:%M:%S&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;)&lt;/span&gt;

  &lt;span class="keyword"&gt;end&lt;/span&gt;
&lt;span class="keyword"&gt;end&lt;/span&gt;

&lt;span class="keyword"&gt;def &lt;/span&gt;&lt;span class="method"&gt;msg&lt;/span&gt;&lt;span class="punct"&gt;(&lt;/span&gt;&lt;span class="ident"&gt;message&lt;/span&gt;&lt;span class="punct"&gt;)&lt;/span&gt;

  &lt;span class="ident"&gt;puts&lt;/span&gt; &lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;&lt;span class="expr"&gt;#{Time.now.friendly_format}&lt;/span&gt; - &lt;span class="expr"&gt;#{message}&lt;/span&gt;&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="keyword"&gt;end&lt;/span&gt;

&lt;span class="keyword"&gt;def &lt;/span&gt;&lt;span class="method"&gt;produce_diff&lt;/span&gt;&lt;span class="punct"&gt;(&lt;/span&gt;&lt;span class="ident"&gt;revisions&lt;/span&gt;&lt;span class="punct"&gt;,&lt;/span&gt; &lt;span class="ident"&gt;earlier_revision&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="constant"&gt;nil&lt;/span&gt;&lt;span class="punct"&gt;)&lt;/span&gt;

  &lt;span class="keyword"&gt;if&lt;/span&gt; &lt;span class="ident"&gt;revisions&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;empty?&lt;/span&gt;
    &lt;span class="ident"&gt;msg&lt;/span&gt; &lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;All finished.&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;

    &lt;span class="ident"&gt;exit&lt;/span&gt;
  &lt;span class="keyword"&gt;end&lt;/span&gt;

  &lt;span class="ident"&gt;later_revision&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="ident"&gt;earlier_revision&lt;/span&gt; &lt;span class="punct"&gt;?&lt;/span&gt; &lt;span class="ident"&gt;earlier_revision&lt;/span&gt; &lt;span class="punct"&gt;:&lt;/span&gt; &lt;span class="ident"&gt;revisions&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;shift&lt;/span&gt;

  &lt;span class="ident"&gt;earlier_revision&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="ident"&gt;revisions&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;shift&lt;/span&gt;

  &lt;span class="ident"&gt;msg&lt;/span&gt; &lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;Creating diff from revision &lt;span class="expr"&gt;#{earlier_revision}&lt;/span&gt; to &lt;span class="expr"&gt;#{later_revision}&lt;/span&gt;.&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;

  `&lt;span class="ident"&gt;svn&lt;/span&gt; &lt;span class="ident"&gt;diff&lt;/span&gt; &lt;span class="punct"&gt;-&lt;/span&gt;&lt;span class="ident"&gt;r&lt;/span&gt;&lt;span class="comment"&gt;#{earlier_revision}:#{later_revision} &amp;gt; patches/#{later_revision}.patch`&lt;/span&gt;

  &lt;span class="ident"&gt;produce_diff&lt;/span&gt;&lt;span class="punct"&gt;(&lt;/span&gt;&lt;span class="ident"&gt;revisions&lt;/span&gt;&lt;span class="punct"&gt;,&lt;/span&gt; &lt;span class="ident"&gt;earlier_revision&lt;/span&gt;&lt;span class="punct"&gt;)&lt;/span&gt;

&lt;span class="keyword"&gt;end&lt;/span&gt;

&lt;span class="constant"&gt;FileUtils&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;mkdir_p&lt;/span&gt; &lt;span class="punct"&gt;'&lt;/span&gt;&lt;span class="string"&gt;patches&lt;/span&gt;&lt;span class="punct"&gt;'&lt;/span&gt;

&lt;span class="ident"&gt;msg&lt;/span&gt; &lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;Scanning output of svn log to find all revisions that we care about...&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="ident"&gt;log&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; `&lt;span class="ident"&gt;svn&lt;/span&gt; &lt;span class="ident"&gt;log&lt;/span&gt; &lt;span class="punct"&gt;-&lt;/span&gt;&lt;span class="ident"&gt;rHEAD&lt;/span&gt;&lt;span class="punct"&gt;:&lt;/span&gt;&lt;span class="comment"&gt;#{stop_at_revision} -q`&lt;/span&gt;

&lt;span class="ident"&gt;revisions&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="ident"&gt;log&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;scan&lt;/span&gt;&lt;span class="punct"&gt;(/&lt;/span&gt;&lt;span class="regex"&gt;^r(&lt;span class="escape"&gt;\d&lt;/span&gt;+)&lt;/span&gt;&lt;span class="punct"&gt;/)&lt;/span&gt;

&lt;span class="ident"&gt;revisions&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="ident"&gt;revisions&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;flatten&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;collect&lt;/span&gt; &lt;span class="punct"&gt;{&lt;/span&gt; &lt;span class="punct"&gt;|&lt;/span&gt;&lt;span class="ident"&gt;revision&lt;/span&gt;&lt;span class="punct"&gt;|&lt;/span&gt; &lt;span class="constant"&gt;Integer&lt;/span&gt;&lt;span class="punct"&gt;(&lt;/span&gt;&lt;span class="ident"&gt;revision&lt;/span&gt;&lt;span class="punct"&gt;)&lt;/span&gt; &lt;span class="punct"&gt;}&lt;/span&gt;

&lt;span class="ident"&gt;produce_diff&lt;/span&gt;&lt;span class="punct"&gt;(&lt;/span&gt;&lt;span class="ident"&gt;revisions&lt;/span&gt;&lt;span class="punct"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>

      <pubDate>Mon, 14 Jan 2008 09:59:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:fd5f813c-6d6f-488a-bcfa-46ea5a7b37f0</guid>
      <author>Chris Roos</author>
      <link>http://blog.seagul.co.uk/articles/2008/01/14/searching-subversion-history</link>
      <category>svn</category>
      <category>search</category>

      <category>trac</category>
      <category>subversion</category>
      <category>script</category>
      <category>ruby</category>
    </item>
    <item>
      <title>Extracting my del.icio.us permalinks functionality into its own firefox extension</title>

      <description>&lt;p&gt;My &lt;a href="http://blog.seagul.co.uk/articles/2007/09/05/patching-the-del-icio-us-firefox-extension-to-add-permalinks"&gt;previous implementation&lt;/a&gt; amended the &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/3615"&gt;del.icio.us bookmarks extension&lt;/a&gt;.  I spent some time this morning, and evening, extracting the functionality into its own &lt;a href="http://chrisroos.googlecode.com/svn/trunk/delicious-permalinks/"&gt;extension&lt;/a&gt;.  This should mean that I remain decoupled from their extension: I don&amp;#8217;t have to update, or even just apply, my original patch whenever the del.icio.us extension is changed.  It should also make it much easier for anyone else to try (if they so wish).&lt;/p&gt;


	&lt;p&gt;I&amp;#8217;ve created a &lt;a href="http://groups.google.com/group/delicious-permalinks/"&gt;google group&lt;/a&gt; if folks want to chat about it.&lt;/p&gt;


	&lt;p&gt;To install the extension just visit the (very, very basic) &lt;a href="http://delicious-permalinks.googlegroups.com/web/installation.html"&gt;installation page&lt;/a&gt;.&lt;/p&gt;</description>

      <pubDate>Tue, 18 Dec 2007 23:01:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:c3be6b95-9fd4-4169-84de-faea63703c8b</guid>
      <author>Chris Roos</author>
      <link>http://blog.seagul.co.uk/articles/2007/12/18/extracting-my-del-icio-us-permalinks-functionality-into-its-own-firefox-extension</link>
      <category>del.icio.us</category>
      <category>bookmark</category>

      <category>permalinks</category>
      <category>firefox</category>
      <category>extension</category>
    </item>
    <item>
      <title>Cross browser (well, IE 6, Firefox 2 and Safari 3) bookmarklet script</title>
      <description>&lt;p&gt;I &lt;a href="http://blog.seagul.co.uk/articles/2007/12/14/bookmarklet-favelet-limits-in-internet-explorer-6-and-7"&gt;mentioned&lt;/a&gt; that I&amp;#8217;d been playing with bookmarklets in Internet Explorer 6 (among other, proper, browsers).&lt;/p&gt;


	&lt;p&gt;I thought it might be useful to paste the script that bootstraps the bookmarklet.  The concept is that we use the bookmarklet javascript to insert a script tag into the page that links to the full javascript file containing the function(s) that we wish to execute.  I know this has been documented elsewhere and I&amp;#8217;ve probably missed some important stuff out but it may prove useful to someone.&lt;/p&gt;


	&lt;h3&gt;The commented, un-compressed, version&lt;/h3&gt;


&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_javascript "&gt;if (typeof(rvmBM) == 'undefined') { // Best to name rvmBM to something unlikely to clash with pre-defined variables
  var s = document.createElement('script'); // Use of s versus script saves some precious space
  s.type = 'text/javascript';
  s.src = 'http://example.com/my-external-bookmarklet.js'; // The location of your bookmarklet javascript that does all the work
  void(rvmBM = true); // Prevent the bookmarklet javascript from being loaded multiple times by setting this flag
  void(document.body.appendChild(s)); // Place the script tag in the body of the document
  // If we don't use void() above then we end up writing either 'true' or some junk to the screen in Internet Explorer (only)
};
function addRvm() { // A wrapper function around the actual function we want to call
  if (typeof(addReevooMark) == 'function') { // We want to make sure our bookmarklet function is defined (there's some delay in it becoming available in Firefox.  It's defined immediately in Internet Explorer.)
    addReevooMark();
  } else {
    void(setTimeout(addRvm, 100)); // If our function isn't ready yet we'll just hang on 1/10th of a second and try again
  };
};
addRvm(); // Ask our wrapper function to call the actual bookmarklet function&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

	&lt;h3&gt;The compressed version&lt;/h3&gt;


&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_javascript "&gt;javascript:if(typeof(rvmBM)=='undefined'){var s=document.createElement('script');s.type='text/javascript';s.src='http://example.com/my-external-bookmarklet.js';void(rvmBM=true);void(document.body.appendChild(s));};function addRvm(){if(typeof(addReevooMark)=='function'){addReevooMark();}else{void(setTimeout(addRvm,100));};};addRvm();&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>

      <pubDate>Fri, 14 Dec 2007 21:27:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:bad3b2d6-3353-4df9-94ed-73df516a11dc</guid>
      <author>Chris Roos</author>
      <link>http://blog.seagul.co.uk/articles/2007/12/14/cross-browser-well-ie-6-firefox-2-and-safari-3-bookmarklet-script</link>
      <category>bookmarklet</category>
      <category>javascript</category>

      <category>browser</category>
      <category>internet</category>
      <category>explorer</category>
      <category>firefox</category>
      <category>safari</category>
    </item>

    <item>
      <title>Web pages should specify their canonical URL (permalink)</title>
      <description>&lt;p&gt;I&amp;#8217;ve been using &lt;a href="http://del.icio.us"&gt;del.icio.us&lt;/a&gt; to record items on &lt;a href="http://www.ebay.co.uk"&gt;ebay&lt;/a&gt; that I&amp;#8217;m interested in.  The problem is that each ebay page can have multiple URLs &amp;#8211; none of which redirect to the canonical version.  I can end up tagging the same listing twice if I happen to visit it with two different URLs &amp;#8211; this is annoying.  It wouldn&amp;#8217;t be hard for them to either redirect to the canonical version or just add a &lt;code&gt;&amp;lt;link rel="bookmark" ... /&amp;gt;&lt;/code&gt; tag to the document.  This way, I could ensure that I was always bookmarking the same version (even modifying the del.icio.us plugin if necessary).&lt;/p&gt;


	&lt;p&gt;This isn&amp;#8217;t just a problem for ebay: lots of sites duplicate their content on multiple URLs (hello retailers).  Maybe in the short term we could come up with some rules for turning any given &lt;span class="caps"&gt;URL&lt;/span&gt; on a specific site into its canonical representation.  That sounds like a nice, useful, little service to me.  Can someone build it for me please?&lt;/p&gt;</description>
      <pubDate>Fri, 14 Dec 2007 17:49:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:1fc52fd3-6ca6-4fa9-9822-bd0dd0161af7</guid>

      <author>Chris Roos</author>
      <link>http://blog.seagul.co.uk/articles/2007/12/14/web-pages-should-specify-their-canonical-url-permalink</link>
      <category>del.icio.us</category>
      <category>bookmark</category>
    </item>
    <item>
      <title>Bookmarklet (Favelet) limits in Internet Explorer 6 (and 7?)</title>

      <description>&lt;p&gt;I wasted quite a bit of time over the last couple of days trying to get a &lt;a href="http://en.wikipedia.org/wiki/Bookmarklet"&gt;bookmarklet&lt;/a&gt; (or favelet) working in Internet Explorer 6.  It worked perfectly in Firefox and Safari but wasn&amp;#8217;t doing anything at all in IE.  Through lots of trial and error, I came to the conclusion that it was because of the length of the bookmarklet: it seems that Microsoft &lt;a href="http://www.squarefree.com/2005/01/12/internet-explorer-drops-support-for-bookmarklets/"&gt;reduced the maximum length of a bookmarklet in &lt;span class="caps"&gt;IE 6&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;


	&lt;p&gt;Although my original bookmarklet wasn&amp;#8217;t all that long, I had it spread over multiple lines for readability.  The fix in my case was to remove all the spaces and place the bookmarklet on one line.&lt;/p&gt;


	&lt;p&gt;I started to think that it might be nice to have a bookmarklet &lt;a href="http://www.rubyonrails.com"&gt;rails&lt;/a&gt; helper.  The bookmarklet helper would allow you to format your javascript for readability but shorten it all in the resulting html (it could even warn if the bookmarklet is too long for IE).  I couldn&amp;#8217;t find anything similar, and I probably won&amp;#8217;t get around to doing it myself, but I did decide to investigate the limit in IE (which could form the basis of such a helper).&lt;/p&gt;


	&lt;p&gt;I used the html page below to test the limits of Internet Explorer.  This is the longest bookmarklet that I could get to work: one more character (a 2 on the end of those numbers, for example) and the bookmarklet won&amp;#8217;t work (it still works if you click the link in the page &amp;#8211; it only fails when used as an actual bookmarklet).&lt;/p&gt;


&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_default "&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD HTML 4.01//EN&amp;quot;&amp;gt;

&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;a href=&amp;quot;javascript:
      var msg = 'hello world, this is my message.  i\'m trying to see how long i can be until internet explorer blows up in my face.';
      var msg = msg + '\n';
      var msg = msg + 'this is the second line of my long message';
      var msg = msg + '\n';
      var msg = msg + '12345679012345678901';
      alert(msg);&amp;quot;&amp;gt;bookmarklet&amp;lt;/a&amp;gt;
  &amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

	&lt;p&gt;I noticed that, once added to Internet Explorer, the bookmarklet appeared to be &lt;a href="http://www.blooberry.com/indexdot/html/topics/urlencoding.htm"&gt;&lt;span class="caps"&gt;URL&lt;/span&gt; encoded&lt;/a&gt; (my assumption was based on the conversion of spaces to %20.)&lt;/p&gt;


	&lt;p&gt;&lt;a href="http://www.flickr.com/photos/chrisjroos/2109757023/"&gt;&lt;img src="http://farm3.static.flickr.com/2321/2109757023_0f69015c44.jpg" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;


	&lt;p&gt;I tried to replicate this encoded string in &lt;a href="http://www.ruby-lang.org"&gt;ruby&lt;/a&gt; but failed:  A simple &lt;span class="caps"&gt;URI&lt;/span&gt;.escape in ruby was escaping too much.  Inspecting the bookmarklet again seemed to suggest that the only encoding performed is to remove newlines and convert spaces to %20.  Replicating this in irb gave me the same string that Internet Explorer had in its favourites.&lt;/p&gt;


&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_ruby "&gt;&lt;span class="ident"&gt;irb&lt;/span&gt;&lt;span class="punct"&gt;)&lt;/span&gt; &lt;span class="ident"&gt;str&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;javascript:
  var msg = 'hello world, this is my message.  i&lt;span class="escape"&gt;\'&lt;/span&gt;m trying to see how long i can be until internet explorer blows up in my face.';
  var msg = msg + '&lt;span class="escape"&gt;\n&lt;/span&gt;';
  var msg = msg + 'this is the second line of my long message';
  var msg = msg + '&lt;span class="escape"&gt;\n&lt;/span&gt;';
  var msg = msg + '12345679012345678901';
  alert(msg);&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="ident"&gt;irb&lt;/span&gt;&lt;span class="punct"&gt;)&lt;/span&gt; &lt;span class="ident"&gt;p&lt;/span&gt; &lt;span class="ident"&gt;str&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;gsub&lt;/span&gt;&lt;span class="punct"&gt;(&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;'&lt;span class="escape"&gt;\n&lt;/span&gt;'&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;,&lt;/span&gt; &lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;'--NEW-LINE--'&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;).&lt;/span&gt;&lt;span class="ident"&gt;gsub&lt;/span&gt;&lt;span class="punct"&gt;(&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;&lt;span class="escape"&gt;\n&lt;/span&gt;&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;,&lt;/span&gt; &lt;span class="punct"&gt;'&lt;/span&gt;&lt;span class="string"&gt;&lt;/span&gt;&lt;span class="punct"&gt;').&lt;/span&gt;&lt;span class="ident"&gt;gsub&lt;/span&gt;&lt;span class="punct"&gt;(&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;'--NEW-LINE--'&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;,&lt;/span&gt; &lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;'&lt;span class="escape"&gt;\n&lt;/span&gt;'&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;).&lt;/span&gt;&lt;span class="ident"&gt;gsub&lt;/span&gt;&lt;span class="punct"&gt;('&lt;/span&gt;&lt;span class="string"&gt; &lt;/span&gt;&lt;span class="punct"&gt;',&lt;/span&gt; &lt;span class="punct"&gt;&amp;quot;&lt;/span&gt;&lt;span class="string"&gt;%20&lt;/span&gt;&lt;span class="punct"&gt;&amp;quot;).&lt;/span&gt;&lt;span class="ident"&gt;length&lt;/span&gt;

&lt;span class="punct"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="number"&gt;505&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

	&lt;p&gt;Everything I&amp;#8217;d read about these bookmarklets in Internet Explorer suggested that the limit was 508 characters: the length of the bookmarklet above (once encoded) is only 505 characters.  Adding one more character makes it fail as a bookmarklet.  Hmm, maybe I&amp;#8217;m doing something dumb?&lt;/p&gt;


	&lt;p&gt;I&amp;#8217;ve cheated a bit in the &amp;#8216;encoding&amp;#8217; above.  IE removes all newlines (I wonder if this happens in the &lt;span class="caps"&gt;DOM&lt;/span&gt; or just when you add it as a favourite?) so that the bookmarklet appears on one line.  I needed to do the same but also needed those newlines in the msg to remain (hence the &lt;span class="caps"&gt;NEW&lt;/span&gt;-LINE replacement stuff).  This is a very naive imlpementation: if you have &amp;#8217;\n\n&amp;#8217;, for example, then it breaks.  The &amp;#8216;encoding&amp;#8217; would need to be a little more intelligent in an actual helper (but only if you wanted to report on the size of the bookmarklet).&lt;/p&gt;


	&lt;p&gt;I couldn&amp;#8217;t find any reference to source of this 508 character limit in Internet Explorer: all the blog articles just state it as fact.  So, maybe it&amp;#8217;s not 508.  Maybe it&amp;#8217;s actually 505&amp;#8230;&lt;/p&gt;</description>
      <pubDate>Fri, 14 Dec 2007 08:46:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:958ddabd-4102-4da1-8e3b-18a07bb38d35</guid>

      <author>Chris Roos</author>
      <link>http://blog.seagul.co.uk/articles/2007/12/14/bookmarklet-favelet-limits-in-internet-explorer-6-and-7</link>
      <category>ruby</category>
      <category>internet</category>
      <category>explorer</category>
      <category>bookmarklet</category>

      <category>javascript</category>
      <category>browser</category>
      <category>url</category>
    </item>
    <item>
      <title>Testing ActionMailer::Base.server_settings</title>
      <description>&lt;p&gt;I needed to use an external &lt;span class="caps"&gt;SMTP&lt;/span&gt; server to get mail through to certain providers (notably, hotmail).&lt;/p&gt;


	&lt;p&gt;I was sending my &lt;a href="http://api.rubyonrails.org/classes/ActionMailer/Base.html"&gt;action mailer&lt;/a&gt; email but couldn&amp;#8217;t be sure that I&amp;#8217;d configured the settings correctly as I didn&amp;#8217;t get any detailed log output (or at least not where I was looking).&lt;/p&gt;


	&lt;p&gt;I dug into the code and found the lines that were responsible for sending the email.  Replaying that code in the console allowed me to identify the problem immediately (a missing domain in my case).  I thought I&amp;#8217;d paste those few lines here in case they&amp;#8217;re of some use to someone else.&lt;/p&gt;


&lt;div class="typocode"&gt;&lt;pre&gt;&lt;code class="typocode_ruby "&gt;&lt;span class="ident"&gt;message&lt;/span&gt;&lt;span class="punct"&gt;,&lt;/span&gt; &lt;span class="ident"&gt;from&lt;/span&gt;&lt;span class="punct"&gt;,&lt;/span&gt; &lt;span class="ident"&gt;to&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="punct"&gt;'&lt;/span&gt;&lt;span class="string"&gt;test message&lt;/span&gt;&lt;span class="punct"&gt;',&lt;/span&gt; &lt;span class="punct"&gt;'&lt;/span&gt;&lt;span class="string"&gt;sender-email&lt;/span&gt;&lt;span class="punct"&gt;',&lt;/span&gt; &lt;span class="punct"&gt;'&lt;/span&gt;&lt;span class="string"&gt;recipient-email&lt;/span&gt;&lt;span class="punct"&gt;'&lt;/span&gt;

&lt;span class="ident"&gt;s&lt;/span&gt; &lt;span class="punct"&gt;=&lt;/span&gt; &lt;span class="constant"&gt;ActionMailer&lt;/span&gt;&lt;span class="punct"&gt;::&lt;/span&gt;&lt;span class="constant"&gt;Base&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;server_settings&lt;/span&gt;

&lt;span class="constant"&gt;Net&lt;/span&gt;&lt;span class="punct"&gt;::&lt;/span&gt;&lt;span class="constant"&gt;SMTP&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;start&lt;/span&gt;&lt;span class="punct"&gt;(&lt;/span&gt;&lt;span class="ident"&gt;s&lt;/span&gt;&lt;span class="punct"&gt;[&lt;/span&gt;&lt;span class="symbol"&gt;:address&lt;/span&gt;&lt;span class="punct"&gt;],&lt;/span&gt; &lt;span class="ident"&gt;s&lt;/span&gt;&lt;span class="punct"&gt;[&lt;/span&gt;&lt;span class="symbol"&gt;:port&lt;/span&gt;&lt;span class="punct"&gt;],&lt;/span&gt; &lt;span class="ident"&gt;s&lt;/span&gt;&lt;span class="punct"&gt;[&lt;/span&gt;&lt;span class="symbol"&gt;:domain&lt;/span&gt;&lt;span class="punct"&gt;],&lt;/span&gt; &lt;span class="ident"&gt;s&lt;/span&gt;&lt;span class="punct"&gt;[&lt;/span&gt;&lt;span class="symbol"&gt;:user_name&lt;/span&gt;&lt;span class="punct"&gt;],&lt;/span&gt; &lt;span class="ident"&gt;s&lt;/span&gt;&lt;span class="punct"&gt;[&lt;/span&gt;&lt;span class="symbol"&gt;:password&lt;/span&gt;&lt;span class="punct"&gt;],&lt;/span&gt; &lt;span class="ident"&gt;s&lt;/span&gt;&lt;span class="punct"&gt;[&lt;/span&gt;&lt;span class="symbol"&gt;:authentication&lt;/span&gt;&lt;span class="punct"&gt;])&lt;/span&gt; &lt;span class="keyword"&gt;do&lt;/span&gt; &lt;span class="punct"&gt;|&lt;/span&gt;&lt;span class="ident"&gt;smtp&lt;/span&gt;&lt;span class="punct"&gt;|&lt;/span&gt; 
  &lt;span class="ident"&gt;smtp&lt;/span&gt;&lt;span class="punct"&gt;.&lt;/span&gt;&lt;span class="ident"&gt;sendmail&lt;/span&gt;&lt;span class="punct"&gt;(&lt;/span&gt;&lt;span class="ident"&gt;message&lt;/span&gt;&lt;span class="punct"&gt;,&lt;/span&gt; &lt;span class="ident"&gt;from&lt;/span&gt;&lt;span class="punct"&gt;,&lt;/span&gt; &lt;span class="ident"&gt;to&lt;/span&gt;&lt;span class="punct"&gt;)&lt;/span&gt;

&lt;span class="keyword"&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <pubDate>Fri, 07 Dec 2007 17:23:00 +0000</pubDate>
      <guid isPermaLink="false">urn:uuid:50584d74-8475-4f21-8326-07f1ed0d3d0b</guid>
      <author>Chris Roos</author>
      <link>http://blog.seagul.co.uk/articles/2007/12/07/testing-actionmailer-base-server_settings</link>

      <category>ruby</category>
      <category>rails</category>
      <category>action</category>
      <category>mailer</category>
    </item>
  </channel>
</rss>

